"use strict";!function(){function e(){function e(e){var t={};return Object.keys(l).forEach(function(e){d.test(e)||o.test(e)?(s(t[e])&&(t[e]={}),a(l[e])&&Object.keys(l[e]).forEach(function(n){a(l[e][n])&&(t[e][n]=l[e][n])})):a(l[e])&&(t[e]=l[e])}),a(e)&&Object.keys(l).forEach(function(n){d.test(n)||o.test(n)?a(e[n])&&Object.keys(e[n]).forEach(function(i){a(e[n][i])&&(t[n][i]=e[n][i])}):a(e[n])&&(t[n]=e[n])}),t}function t(e){Object.keys(e).forEach(function(t){d.test(t)||o.test(t)?Object.keys(e[t]).forEach(function(n){l[t][n]=e[t][n]}):l[t]=e[t]})}var n=this,i="",l={texts:{filterSelectionLabelText:"Filters: ",setDefaultButtonText:"Set as default",editButtonText:"Edit",newButtonText:"New",cancelButtonText:"Cancel",saveButtonText:"Save",selectedFilterLabelText:"Filter's name: ",availableContainerLabelText:"Available fields",selectedEmptyMessageText:"Select or create a new filter configuration"},styleClasses:{setDefaultButtonClass:i,editButtonClass:i,newButtonClass:i,cancelButtonClass:i,saveButtonClass:i,selectedEmptyMessageClass:i},iconPrefix:"",filterValidationFn:i},d=/text/,o=/styleClasses/;n.$get=function(){return n},n.getDefaults=e,n.setDefaults=t}function t(e){e.put("nggs.advanced-drag-drop-filter.html",['<div class="advanced-drag-drop-filter">','<div class="control-container">','<div class="filter-selection">','<label class="filter-selection-label" ng-bind="::filterSelectionLabelText"></label>','<select class="filter-selection-select" ng-disabled="isEditing || filters == null || filters.length == 0" ng-model="selected" ng-options="option.name for option in filters track by option.id" ng-change="change()"></select>',"</div>",'<div class="buttons-container">','<button class="set-default-button {{ ::setDefaultButtonClass }}" ng-if="showEditionButton()" type="button" ng-click="setDefault()" ng-bind="::setDefaultButtonText"></button>','<button class="edit-button {{ ::editButtonClass }}" ng-if="showEditionButton()" type="button" ng-click="edit()" ng-bind="::editButtonText"></button>','<button class="new-button {{ ::newButtonClass }}" ng-if="!isEditing" type="button" ng-click="new()" ng-bind="::newButtonText"></button>','<button class="cancel-button {{ ::cancelButtonClass }}" ng-if="isEditing" type="button" ng-click="cancel()" ng-bind="::cancelButtonText"></button>','<button class="save-button {{ ::saveButtonClass }}" ng-if="isEditing" ng-disabled="!isFilterValid()" type="button" ng-click="save()" ng-bind="::saveButtonText"></button>',"</div>","</div>","<div class=\"selected-container {{ isEditing ? 'editing' : '' }}\">",'<div ng-if="selected == null" class="selected-empty-message {{ ::selectedEmptyMessageClass }}" ng-bind="::selectedEmptyMessageText"></div>','<div ng-if="isEditing" class="selected-filter-header">','<label class="selected-filter-label" ng-bind="::selectedFilterLabelText"></label>','<input class="selected-filter-input" type="text" ng-model="editingFilter.name" />',"</div>",'<div class="selected-fields"></div>',"</div>","<div ng-show=\"isEditing\" class=\"available-container {{ isEditing ? 'editing' : '' }}\">",'<label ng-bind="::availableContainerLabelText"></label>','<div class="available-fields">','<div class="available-field" ng-repeat="field in availableFields track by field.id" data-id="{{ ::field.id }}" draggable="true">','<i class="available-field-icon" ng-class="getFieldClass(field)"></i> <span class="available-field-name" ng-bind="::field.name"></span>',"</div>","</div>","</div>",'<div class="source-fields" ng-transclude></div>',"</div>"].join(""))}function n(){return{restrict:"E",templateUrl:"nggs.advanced-drag-drop-filter.html",transclude:!0,scope:{filters:"=",selected:"=",options:"=",onSave:"&",onSetDefault:"&",onChangeFilter:"&"},controller:i}}function i(e,t,n,i){function d(){V.isEditing=!1,V.editingFilter=null,f(),w()}function o(){w(),V.onChangeFilter({$event:V.selected})}function c(){for(;I.firstChild;)I.removeChild(I.firstChild)}function r(e){return e.name&&e.name.length>0&&e.fields.length>0}function u(){f(),N&&N()}function f(){M.removeEventListener("dragstart",h,!0),q.removeEventListener("dragover",m,!0),I.removeEventListener("dragover",m,!0),q.removeEventListener("drop",C,!0),I.removeEventListener("drop",y,!0)}function g(){V.isEditing=!0,V.editingFilter={id:V.selected.id,name:V.selected.name,fields:V.selected.fields.slice()},B(),D()}function v(e){var t={};return t[H]=!0,t[e.icon]=!0,t}function b(){T(),j(),$(),L()}function p(){return G(V.editingFilter)}function E(){c(),V.isEditing=!0,V.editingFilter={id:null,name:null,fields:[]},B(),D()}function h(e){A=e.target,A.className+=" dragging"}function m(e){e.preventDefault()}function C(){if(A.className=A.className.replace(/dragging/,""),!P.test(A.className)){var t=z[A.dataset.id],i=V.editingFilter.fields.indexOf(t.id);V.editingFilter.fields.splice(i,1),V.availableFields.push(t),n(function(){I.removeChild(t.field),e.$apply()})}}function y(){if(A.className=A.className.replace(/dragging/,""),P.test(A.className)){var t=V.availableFields.find(function(e){return e.id===A.dataset.id}),i=V.availableFields.indexOf(t);V.availableFields.splice(i,1),V.editingFilter.fields.push(t.id),n(function(){e.$apply(),I.appendChild(t.field)})}}function x(){p()&&(V.isEditing=!1,V.onSave({$event:V.editingFilter}),V.editingFilter=null,f(),w())}function F(){V.onSetDefault({$event:V.selected})}function B(){V.availableFields=[],Object.keys(z).forEach(function(e){var t=V.editingFilter.fields.indexOf(e),n=z[e];n.field.setAttribute("draggable","true"),-1===t&&V.availableFields.push(n)})}function T(){U=i.getDefaults(e.options),H=U.iconPrefix,a(U.filterValidationFn)&&l(U.filterValidationFn)&&(G=U.filterValidationFn),k(),S()}function D(){M.addEventListener("dragstart",h,!0),q.addEventListener("dragover",m,!0),I.addEventListener("dragover",m,!0),q.addEventListener("drop",C,!0),I.addEventListener("drop",y,!0)}function L(){t.on("$destroy",function(){u(),e.$destroy()}),e.$on("$destroy",function(){u()})}function $(){n(function(){for(var e=M.querySelectorAll("[draggable=true]");J.firstChild;)J.removeChild(J.firstChild);e.forEach(function(e){var t=e.dataset;if(s(t.id)||s(t.name))throw new Error("All draggable fields must have the attributes: data-id and data-name");z[t.id]={id:t.id,name:t.name,icon:t.icon,field:e}}),w()})}function w(){c(),V.selected&&Array.isArray(V.selected.fields)&&V.selected.fields.forEach(function(e){var t=z[e];a(t)&&(t.field.setAttribute("draggable","false"),I.appendChild(z[e].field))})}function k(){Object.keys(U.styleClasses).forEach(function(e){K.test(e)&&U.styleClasses[e].length&&(V[e]=U.styleClasses[e])})}function S(){Object.keys(U.texts).forEach(function(e){Q.test(e)&&U.texts[e].length&&(V[e]=U.texts[e])})}function j(){N=e.$watch("selected",function(){V.isEditing||w()})}function O(){return!V.isEditing&&V.selected}var A,N,V=e,M=t[0],q=M.querySelector(".available-fields"),P=/available-field/,U={},z={},G=r,H="",I=M.querySelector(".selected-fields"),J=M.querySelector(".source-fields"),K=/Class$/,Q=/Text$/;V.availableContainerLabelText=null,V.availableFields=null,V.cancelButtonClass=null,V.cancelButtonText=null,V.editButtonClass=null,V.editButtonText=null,V.editingFilter=null,V.filterSelectionLabelText=null,V.isEditing=!1,V.newButtonClass=null,V.newButtonText=null,V.saveButtonClass=null,V.saveButtonText=null,V.selectedFilterLabelText=null,V.selectedEmptyMessageText=null,V.setDefaultButtonClass=null,V.setDefaultButtonText=null,V.cancel=d,V.change=o,V.edit=g,V.getFieldClass=v,V.isFilterValid=p,V.new=E,V.save=x,V.setDefault=F,V.showEditionButton=O,b()}function l(e){return"function"==typeof e}function a(e){return!s(e)}function s(e){return null==e}angular.module("nggs.advanced-drag-drop-filter",[]).provider("ngAdvancedDragDropFilterConfig",e).run(t).directive("ngAdvancedDragDropFilter",n),t.$inject=["$templateCache"],i.$inject=["$scope","$element","$timeout","ngAdvancedDragDropFilterConfig"]}();