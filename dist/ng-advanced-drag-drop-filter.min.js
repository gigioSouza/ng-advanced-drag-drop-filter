!function(){"use strict";function e(){function e(e){var t={};return Object.keys(a).forEach(function(e){d.test(e)||o.test(e)?(s(t[e])&&(t[e]={}),l(a[e])&&Object.keys(a[e]).forEach(function(n){l(a[e][n])&&(t[e][n]=a[e][n])})):l(a[e])&&(t[e]=a[e])}),l(e)&&Object.keys(a).forEach(function(n){d.test(n)||o.test(n)?l(e[n])&&Object.keys(e[n]).forEach(function(i){l(e[n][i])&&(t[n][i]=e[n][i])}):l(e[n])&&(t[n]=e[n])}),t}function t(e){Object.keys(e).forEach(function(t){d.test(t)||o.test(t)?Object.keys(e[t]).forEach(function(n){a[t][n]=e[t][n]}):a[t]=e[t]})}var n=this,i="",a={texts:{filterSelectionLabelText:"Filters: ",setDefaultButtonText:"Set as default",editButtonText:"Edit",newButtonText:"New",cancelButtonText:"Cancel",saveButtonText:"Save",selectedFilterLabelText:"Filter's name: ",availableContainerLabelText:"Available fields",selectedEmptyMessageText:"Select or create a new filter configuration"},styleClasses:{setDefaultButtonClass:i,editButtonClass:i,newButtonClass:i,cancelButtonClass:i,saveButtonClass:i,selectedEmptyMessageClass:i},iconPrefix:"",filterValidationFn:i},d=/text/,o=/styleClasses/;n.$get=function(){return n},n.getDefaults=e,n.setDefaults=t}function t(e){e.put("nggs.advanced-drag-drop-filter.html",['<div class="advanced-drag-drop-filter">','<div class="control-container">','<div class="filter-selection">','<label class="filter-selection-label" ng-bind="::filterSelectionLabelText"></label>','<select class="filter-selection-select" ng-disabled="isEditing || filters == null || filters.length == 0" ng-model="selected" ng-options="option.name for option in filters track by option.id" ng-change="change()"></select>',"</div>",'<div class="buttons-container">','<button class="set-default-button {{ ::setDefaultButtonClass }}" ng-if="showEditionButton()" type="button" ng-click="setDefault()" ng-bind="::setDefaultButtonText"></button>','<button class="edit-button {{ ::editButtonClass }}" ng-if="showEditionButton()" type="button" ng-click="edit()" ng-bind="::editButtonText"></button>','<button class="new-button {{ ::newButtonClass }}" ng-if="!isEditing" type="button" ng-click="new()" ng-bind="::newButtonText"></button>','<button class="cancel-button {{ ::cancelButtonClass }}" ng-if="isEditing" type="button" ng-click="cancel()" ng-bind="::cancelButtonText"></button>','<button class="save-button {{ ::saveButtonClass }}" ng-if="isEditing" ng-disabled="!isFilterValid()" type="button" ng-click="save()" ng-bind="::saveButtonText"></button>',"</div>","</div>","<div class=\"selected-container {{ isEditing ? 'editing' : '' }}\">",'<div ng-if="selected == null" class="selected-empty-message {{ ::selectedEmptyMessageClass }}" ng-bind="::selectedEmptyMessageText"></div>','<div ng-if="isEditing" class="selected-filter-header">','<label class="selected-filter-label" ng-bind="::selectedFilterLabelText"></label>','<input class="selected-filter-input" type="text" ng-model="editingFilter.name" />',"</div>",'<div class="selected-fields"></div>',"</div>","<div ng-show=\"isEditing\" class=\"available-container {{ isEditing ? 'editing' : '' }}\">",'<label ng-bind="::availableContainerLabelText"></label>','<div class="available-fields">','<div class="available-field" ng-repeat="field in availableFields track by field.id" data-id="{{ ::field.id }}" draggable="true">','<i class="available-field-icon" ng-class="getFieldClass(field)"></i> <span class="available-field-name" ng-bind="::field.name"></span>',"</div>","</div>","</div>",'<div class="source-fields" ng-transclude></div>',"</div>"].join(""))}function n(){return{restrict:"E",templateUrl:"nggs.advanced-drag-drop-filter.html",transclude:!0,scope:{filters:"=",selected:"=",options:"=",onSave:"&",onSetDefault:"&",onChangeFilter:"&"},controller:i}}function i(e,t,n,i){function a(){N.isEditing=!1,N.editingFilter=null,u(),$()}function d(){$(),N.onChangeFilter({$event:N.selected})}function o(){for(;H.firstChild;)H.removeChild(H.firstChild)}function c(e){return e.name&&e.name.length>0&&e.fields.length>0}function r(){u(),A&&A()}function u(){M.removeEventListener("dragstart",E,!0),q.removeEventListener("dragover",m,!0),H.removeEventListener("dragover",m,!0),q.removeEventListener("drop",h,!0),H.removeEventListener("drop",C,!0)}function f(){N.isEditing=!0,N.editingFilter={id:N.selected.id,name:N.selected.name,fields:N.selected.fields.slice()},F(),T()}function g(e){var t={};return t[G]=!0,t[e.icon]=!0,t}function v(){B(),S(),L(),D()}function b(){return z(N.editingFilter)}function p(){o(),N.isEditing=!0,N.editingFilter={id:null,name:null,fields:[]},F(),T()}function E(e){O=e.target,O.className+=" dragging"}function m(e){e.preventDefault()}function h(){if(O.className=O.className.replace(/dragging/,""),!V.test(O.className)){var t=U[O.dataset.id],i=N.editingFilter.fields.indexOf(t.id);N.editingFilter.fields.splice(i,1),N.availableFields.push(t),n(function(){H.removeChild(t.field),e.$apply()})}}function C(){if(O.className=O.className.replace(/dragging/,""),V.test(O.className)){var t=N.availableFields.find(function(e){return e.id===O.dataset.id}),i=N.availableFields.indexOf(t);N.availableFields.splice(i,1),N.editingFilter.fields.push(t.id),n(function(){e.$apply(),H.appendChild(t.field)})}}function x(){b()&&(N.isEditing=!1,N.onSave({$event:N.editingFilter}),N.editingFilter=null,u(),$())}function y(){N.onSetDefault({$event:N.selected})}function F(){N.availableFields=[],Object.keys(U).forEach(function(e){var t=N.editingFilter.fields.indexOf(e),n=U[e];n.field.setAttribute("draggable","true"),-1===t&&N.availableFields.push(n)})}function B(){P=i.getDefaults(e.options),G=P.iconPrefix,z=P.filterValidationFn,w(),k()}function T(){M.addEventListener("dragstart",E,!0),q.addEventListener("dragover",m,!0),H.addEventListener("dragover",m,!0),q.addEventListener("drop",h,!0),H.addEventListener("drop",C,!0)}function D(){t.on("$destroy",function(){r(),e.$destroy()}),e.$on("$destroy",function(){r()})}function L(){n(function(){for(var e=M.querySelectorAll("[draggable=true]");I.firstChild;)I.removeChild(I.firstChild);e.forEach(function(e){var t=e.dataset;if(s(t.id)||s(t.name))throw new Error("All draggable fields must have the attributes: data-id and data-name");U[t.id]={id:t.id,name:t.name,icon:t.icon,field:e}}),$()})}function $(){o(),N.selected&&Array.isArray(N.selected.fields)&&N.selected.fields.forEach(function(e){var t=U[e];l(t)&&(t.field.setAttribute("draggable","false"),H.appendChild(U[e].field))})}function w(){Object.keys(P.styleClasses).forEach(function(e){J.test(e)&&P.styleClasses[e].length&&(N[e]=P.styleClasses[e])})}function k(){Object.keys(P.texts).forEach(function(e){K.test(e)&&P.texts[e].length&&(N[e]=P.texts[e])})}function S(){A=e.$watch("selected",function(){N.isEditing||$()})}function j(){return!N.isEditing&&N.selected}var O,A,N=e,M=t[0],q=M.querySelector(".available-fields"),V=/available-field/,P={},U={},z=c,G="",H=M.querySelector(".selected-fields"),I=M.querySelector(".source-fields"),J=/Class$/,K=/Text$/;N.availableContainerLabelText=null,N.availableFields=null,N.cancelButtonClass=null,N.cancelButtonText=null,N.editButtonClass=null,N.editButtonText=null,N.editingFilter=null,N.filterSelectionLabelText=null,N.isEditing=!1,N.newButtonClass=null,N.newButtonText=null,N.saveButtonClass=null,N.saveButtonText=null,N.selectedFilterLabelText=null,N.selectedEmptyMessageText=null,N.setDefaultButtonClass=null,N.setDefaultButtonText=null,N.cancel=a,N.change=d,N.edit=f,N.getFieldClass=g,N.isFilterValid=b,N.new=p,N.save=x,N.setDefault=y,N.showEditionButton=j,v()}function l(e){return!s(e)}function s(e){return null==e}angular.module("nggs.advanced-drag-drop-filter",[]).provider("ngAdvancedDragDropFilterConfig",e).run(t).directive("ngAdvancedDragDropFilter",n),t.$inject=["$templateCache"],i.$inject=["$scope","$element","$timeout","ngAdvancedDragDropFilterConfig"]}();