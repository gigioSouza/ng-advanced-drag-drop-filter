!function(){"use strict";function e(){function e(e){var t={};return Object.keys(a).forEach(function(i){n(e)&&n(e[i])?t[i]=e[i]:n(a[i])&&(t[i]=a[i])}),t}function t(e){Object.keys(e).forEach(function(t){s.test(t)||d.test(t)?Object.keys(e[t]).forEach(function(i){a[t][i]=e[t][i]}):a[t]=e[t]})}var i=this,l="",a={texts:{filterSelectionLabelText:"Filters: ",setDefaultButtonText:"Set as default",editButtonText:"Edit",newButtonText:"New",cancelButtonText:"Cancel",saveButtonText:"Save",selectedFilterLabelText:"Filter' name: ",availableContainerLabelText:"Available fields",selectedFilterEmptyMessageText:"Select or create a new filter configuration"},styleClasses:{setDefaultButtonClass:l,editButtonClass:l,newButtonClass:l,cancelButtonClass:l,saveButtonClass:l},iconPrefix:"",filterValidationFn:l},s=/text/,d=/styleClasses/;i.$get=function(){return i},i.getDefaults=e,i.setDefaults=t}function t(e){e.put("nggs.advanced-drag-drop-filter.html",['<div class="advanced-drag-drop-filter">','<div class="control-container">','<div class="filter-selection">','<label class="filter-selection-label" ng-bind="::filterSelectionLabelText"></label>','<select class="filter-selection-select" ng-disabled="isEditing || filters == null || filters.length == 0" ng-model="selectedFilter" ng-options="option.name for option in filters track by option.id" ng-change="change()"></select>',"</div>",'<div class="buttons-container">','<button class="set-default-button {{ setDefaultButtonClass }}" ng-if="showEditionButton()" type="button" ng-click="setDefault()" ng-bind="::setDefaultButtonText"></button>','<button class="edit-button {{ editButtonClass }}" ng-if="showEditionButton()" type="button" ng-click="edit()" ng-bind="::editButtonText"></button>','<button class="new-button {{ newButtonClass }}" ng-if="!isEditing" type="button" ng-click="new()" ng-bind="::newButtonText"></button>','<button class="cancel-button {{ cancelButtonClass }}" ng-if="isEditing" type="button" ng-click="cancel()" ng-bind="::cancelButtonText"></button>','<button class="save-button {{ saveButtonClass }}" ng-if="isEditing" ng-disabled="!isFilterValid()" type="button" ng-click="save()" ng-bind="::saveButtonText"></button>',"</div>","</div>","<div class=\"selected-container {{ isEditing ? 'editing' : '' }}\">",'<div ng-if="selectedFilter == null" ng-bind="::selectedFilterEmptyMessageText"></div>','<div ng-if="isEditing" class="selected-filter-header">','<label class="selected-filter-label" ng-bind="::selectedFilterLabelText"></label>','<input class="selected-filter-input" type="text" ng-model="editingFilter.name" />',"</div>",'<div class="selected-fields"></div>',"</div>","<div ng-show=\"isEditing\" class=\"available-container {{ isEditing ? 'editing' : '' }}\">",'<label ng-bind="::availableContainerLabelText"></label>','<div class="available-fields">','<div class="available-field" ng-repeat="field in availableFields track by field.id" data-id="{{ ::field.id }}" draggable="true">','<i class="available-field-icon" ng-class="getFieldClass(field)"></i> <span class="available-field-name" ng-bind="::field.name"></span>',"</div>","</div>","</div>",'<div class="source-fields" ng-transclude></div>',"</div>"].join(""))}function i(){function e(e,t,i,l){function a(){k.isEditing=!1,k.editingFilter=null,o(),L()}function s(){L(),k.onChangeFilter({$event:k.selectedFilter})}function d(){for(;P.firstChild;)P.removeChild(P.firstChild)}function r(e){return e.name&&e.name.length>0&&e.fields.length>0}function o(){O.removeEventListener("dragstart",b,!0),j.removeEventListener("dragover",F,!0),P.removeEventListener("dragover",F,!0),j.removeEventListener("drop",p,!0),P.removeEventListener("drop",C,!0)}function c(){k.isEditing=!0,k.editingFilter={id:k.selectedFilter.id,name:k.selectedFilter.name,fields:k.selectedFilter.fields.slice()},x(),y()}function u(e){var t={};return t[V]=!0,t[e.icon]=!0,t}function f(){m(),T(),B()}function g(){return M(k.editingFilter)}function v(){d(),k.isEditing=!0,k.editingFilter={id:null,name:null,fields:[]},x(),y()}function b(e){$=e.target,$.className+=" dragging"}function F(e){e.preventDefault()}function p(){if($.className=$.className.replace(/dragging/,""),!A.test($.className)){var t=q[$.dataset.id],n=k.editingFilter.fields.indexOf(t.id);k.editingFilter.fields.splice(n,1),k.availableFields.push(t),i(function(){P.removeChild(t.field),e.$apply()})}}function C(){if($.className=$.className.replace(/dragging/,""),A.test($.className)){var t=k.availableFields.find(function(e){return e.id===$.dataset.id}),n=k.availableFields.indexOf(t);k.availableFields.splice(n,1),k.editingFilter.fields.push(t.id),i(function(){e.$apply(),P.appendChild(t.field)})}}function E(){g()&&(k.isEditing=!1,k.onSave({$event:k.editingFilter}),k.editingFilter=null,o(),L())}function h(){k.onSetDefault({$event:k.selectedFilter})}function x(){k.availableFields=[],Object.keys(q).forEach(function(e){var t=k.editingFilter.fields.indexOf(e),i=q[e];i.field.setAttribute("draggable","true"),-1===t&&k.availableFields.push(i)})}function m(){N=l.getDefaults(e.config),V=N.iconPrefix,D(),w()}function y(){O.addEventListener("dragstart",b,!0),j.addEventListener("dragover",F,!0),P.addEventListener("dragover",F,!0),j.addEventListener("drop",p,!0),P.addEventListener("drop",C,!0)}function B(){t.on("$destroy",function(){o&&o(),e.$destroy()}),e.$on("$destroy",function(){o&&o()})}function T(){i(function(){for(var e=O.querySelectorAll("[draggable=true]");U.firstChild;)U.removeChild(U.firstChild);e.forEach(function(e){var t=e.dataset;q[t.id]={id:t.id,name:t.name,icon:t.icon,field:e}}),L()})}function L(){d(),k.selectedFilter&&Array.isArray(k.selectedFilter.fields)&&k.selectedFilter.fields.forEach(function(e){var t=q[e];n(t)&&(t.field.setAttribute("draggable","false"),P.appendChild(q[e].field))})}function D(){Object.keys(N.styleClasses).forEach(function(e){z.test(e)&&N.styleClasses[e].length&&(k[e]=N.styleClasses[e])})}function w(){Object.keys(N.texts).forEach(function(e){G.test(e)&&N.texts[e].length&&(k[e]=N.texts[e])})}function S(){return!k.isEditing&&k.selectedFilter}var $,k=e,O=t[0],j=O.querySelector(".available-fields"),A=/available-field/,N={},q={},M=r,V="",P=O.querySelector(".selected-fields"),U=O.querySelector(".source-fields"),z=/Class$/,G=/Text$/;k.availableContainerLabelText=null,k.availableFields=null,k.cancelButtonClass=null,k.cancelButtonText=null,k.editButtonClass=null,k.editButtonText=null,k.editingFilter=null,k.filterSelectionLabelText=null,k.isEditing=!1,k.newButtonClass=null,k.newButtonText=null,k.saveButtonClass=null,k.saveButtonText=null,k.selectedFilter=k.defaultFilter,k.selectedFilterLabelText=null,k.selectedFilterEmptyMessageText=null,k.setDefaultButtonClass=null,k.setDefaultButtonText=null,k.cancel=a,k.change=s,k.edit=c,k.getFieldClass=u,k.isFilterValid=g,k.new=v,k.save=E,k.setDefault=h,k.showEditionButton=S,f()}return{restrict:"E",templateUrl:"nggs.advanced-drag-drop-filter.html",transclude:!0,scope:{filters:"=",defaultFilter:"=default",onSave:"&",onSetDefault:"&",onChangeFilter:"&"},controller:e}}function n(e){return!l(e)}function l(e){return null==e}angular.module("nggs.advanced-drag-drop-filter",[]).provider("ngAdvancedDragDropFilterConfig",e).run(t).directive("ngAdvancedDragDropFilter",i),t.$inject=["$templateCache"]}();