{"version":3,"sources":["main.js"],"names":["Demo","angular","module","config","controller","$inject","ngAdvancedDragDropFilterConfigProvider","setDefaults","texts","filterSelectionLabelText","setDefaultButtonText","editButtonText","newButtonText","cancelButtonText","saveButtonText","selectedFilterLabelText","availableContainerLabelText","selectedEmptyMessageText","styleClasses","setDefaultButtonClass","newButtonClass","editButtonClass","saveButtonClass","cancelButtonClass","selectedEmptyMessageClass","iconPrefix","self","filters","id","name","fields","selected","onSave","savedFilter","console","log","filter","find","f","length","push","onChange","onSetDefault"],"mappings":";;AAAA,CAAC,SAASA,IAAT,GAAgB;;AAEfC,UAAQC,MAAR,CAAe,MAAf,EAAuB,CAAC,gCAAD,CAAvB,EACGC,MADH,CACUA,MADV,EAEGC,UAFH,CAEc,gBAFd,EAEgCA,UAFhC;;AAIAD,SAAOE,OAAP,GAAiB,CAAC,wCAAD,CAAjB;;AAEA,WAASF,MAAT,CAAgBG,sCAAhB,EAAwD;AACtDA,2CAAuCC,WAAvC,CAAmD;AACjDC,aAAO;AACLC,kCAA0B,mBADrB;AAELC,8BAAsB,cAFjB;AAGLC,wBAAgB,aAHX;AAILC,uBAAe,YAJV;AAKLC,0BAAkB,aALb;AAMLC,wBAAgB,WANX;AAOLC,iCAAyB,2BAPpB;AAQLC,qCAA6B,gCARxB;AASLC,kCAA0B;AATrB,OAD0C;AAYjDC,oBAAc;AACZC,+BAAuB,mBADX;AAEZC,wBAAgB,iBAFJ;AAGZC,yBAAiB,cAHL;AAIZC,yBAAiB,iBAJL;AAKZC,2BAAmB,gBALP;AAMZC,mCAA2B;AANf,OAZmC;AAoBjDC,kBAAY;AApBqC,KAAnD;AAsBD;;AAED,WAASrB,UAAT,GAAsB;AACpB,QAAMsB,OAAO,IAAb;;AAEAA,SAAKC,OAAL,GAAe,CACb;AACEC,UAAI,CADN;AAEEC,YAAM,UAFR;AAGEC,cAAQ,CAAC,OAAD,EAAU,QAAV;AAHV,KADa,EAMb;AACEF,UAAI,CADN;AAEEC,YAAM,UAFR;AAGEC,cAAQ,CAAC,OAAD,EAAU,YAAV;AAHV,KANa,CAAf;;AAaAJ,SAAKK,QAAL,GAAgBL,KAAKC,OAAL,CAAa,CAAb,CAAhB;;AAEAD,SAAKM,MAAL,GAAc,UAACC,WAAD,EAAiB;AAC7BC,cAAQC,GAAR,CAAY,QAAZ,EAAsBF,WAAtB;AACA,UAAIA,YAAYL,EAAhB,EAAoB;AAClB,YAAIQ,SAASV,KAAKC,OAAL,CAAaU,IAAb,CAAkB,UAASC,CAAT,EAAY;AACzC,iBAAOA,EAAEV,EAAF,KAASK,YAAYL,EAA5B;AACD,SAFY,CAAb;;AAIAQ,eAAOP,IAAP,GAAcI,YAAYJ,IAA1B;AACAO,eAAON,MAAP,GAAgBG,YAAYH,MAA5B;AACD,OAPD,MAOO;AACLG,oBAAYL,EAAZ,GAAiBF,KAAKC,OAAL,CAAaY,MAAb,GAAsB,CAAvC;AACAb,aAAKC,OAAL,CAAaa,IAAb,CAAkBP,WAAlB;AACD;AACF,KAbD;;AAeAP,SAAKe,QAAL,GAAgB,UAACL,MAAD,EAAY;AAC1BF,cAAQC,GAAR,CAAY,YAAZ,EAA0BC,MAA1B;AACD,KAFD;;AAIAV,SAAKgB,YAAL,GAAoB,UAACN,MAAD,EAAY;AAC9BF,cAAQC,GAAR,CAAY,aAAZ,EAA2BC,MAA3B;AACD,KAFD;AAGD;AAEF,CA3ED","file":"main.js","sourcesContent":["(function Demo() {\n  \n  angular.module('demo', ['nggs.advanced-drag-drop-filter'])\n    .config(config)\n    .controller('demoController', controller);\n  \n  config.$inject = ['ngAdvancedDragDropFilterConfigProvider']\n  \n  function config(ngAdvancedDragDropFilterConfigProvider) {\n    ngAdvancedDragDropFilterConfigProvider.setDefaults({\n      texts: {\n        filterSelectionLabelText: 'Available filters',\n        setDefaultButtonText: 'Make default',\n        editButtonText: 'Edit filter',\n        newButtonText: 'New filter',\n        cancelButtonText: 'Cancel form',\n        saveButtonText: 'Save form',\n        selectedFilterLabelText: 'Selected filter\\'s name: ',\n        availableContainerLabelText: 'Available fields for selection',\n        selectedEmptyMessageText: 'Select or create a new filter configuration, it\\'s simple!'\n      },\n      styleClasses: {\n        setDefaultButtonClass: 'btn btn-secondary',\n        newButtonClass: 'btn btn-primary',\n        editButtonClass: 'btn btn-info',\n        saveButtonClass: 'btn btn-success',\n        cancelButtonClass: 'btn btn-danger',\n        selectedEmptyMessageClass: 'alert alert-warning'\n      },\n      iconPrefix: 'fa'\n    });\n  }\n  \n  function controller() {\n    const self = this;\n    \n    self.filters = [\n      {\n        id: 1,\n        name: 'Filtro 1',\n        fields: ['input', 'select']\n      },\n      {\n        id: 2,\n        name: 'Filtro 2',\n        fields: ['range', 'datepicker']\n      }\n    ];\n    \n    self.selected = self.filters[0];\n    \n    self.onSave = (savedFilter) => {\n      console.log('salvou', savedFilter);\n      if (savedFilter.id) {\n        var filter = self.filters.find(function(f) {\n          return f.id === savedFilter.id;\n        });\n        \n        filter.name = savedFilter.name;\n        filter.fields = savedFilter.fields;\n      } else {\n        savedFilter.id = self.filters.length + 1;\n        self.filters.push(savedFilter);\n      }\n    };\n  \n    self.onChange = (filter) => {\n      console.log('mudou para', filter);\n    };\n  \n    self.onSetDefault = (filter) => {\n      console.log('set default', filter);\n    }\n  }\n  \n})();\n"]}