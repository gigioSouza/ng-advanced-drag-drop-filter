{"version":3,"sources":["ng-advanced-drag-drop-filter.js"],"names":["NgAdvancedDragDropFilter","angular","module","provider","ngAdvancedDragDropFilterProvider","run","ngAdvancedDragDropFilterRun","directive","ngAdvancedDragDropFilterDirective","empty","defaults","texts","filterSelectionLabelText","setDefaultButtonText","editButtonText","newButtonText","cancelButtonText","saveButtonText","selectedFilterLabelText","availableContainerLabelText","selectedEmptyMessageText","styleClasses","setDefaultButtonClass","editButtonClass","newButtonClass","cancelButtonClass","saveButtonClass","selectedEmptyMessageClass","iconPrefix","filterValidationFn","textsRegex","styleClassesRegex","$get","getDefaults","setDefaults","customConfig","config","Object","keys","forEach","key","test","isNotNull","isNull","subKey","$inject","$templateCache","put","join","restrict","templateUrl","transclude","scope","filters","selected","options","onSave","onSetDefault","onChangeFilter","controller","ngAdvancedDragDropFilterController","$scope","$element","$timeout","ngAdvancedDragDropFilterConfig","self","rootElement","availableFields","querySelector","availableFieldRegex","dragging","fields","defaultValidationFn","selectedFields","$selected","sourceFields","textRegex","editingFilter","isEditing","cancel","change","changeFilter","edit","editFilter","getFieldClass","isFilterValid","new","newFilter","save","saveFilter","setDefault","showEditionButton","init","destroyDragNDropListeners","setupSelectedFilter","$event","clearSelectedFilters","firstChild","removeChild","filter","name","length","destroy","removeEventListener","onDragStart","onDragOver","onDropAvailable","onDropSelected","id","slice","setupAvailableFields","setupDragNDropListeners","field","ngClass","icon","setupConfig","setupWatcher","setupFields","setupDestroy","event","target","className","preventDefault","replace","dataset","indexOf","splice","push","$apply","find","appendChild","fieldRef","setAttribute","isFunction","setupStyleClasses","setupTexts","addEventListener","on","$destroy","$on","fieldsNodeList","querySelectorAll","Error","Array","isArray","$watch","param"],"mappings":"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","file":"ng-advanced-drag-drop-filter.js","sourcesContent":["(function NgAdvancedDragDropFilter() {\n  'use strict';\n  \n  angular.module('nggs.advanced-drag-drop-filter', [])\n    .provider('ngAdvancedDragDropFilterConfig', ngAdvancedDragDropFilterProvider)\n    .run(ngAdvancedDragDropFilterRun)\n    .directive('ngAdvancedDragDropFilter', ngAdvancedDragDropFilterDirective);\n  \n  function ngAdvancedDragDropFilterProvider() {\n    var provider = this;\n  \n    var empty = '';\n    var defaults = {\n      texts: {\n        filterSelectionLabelText: 'Filters: ',\n        setDefaultButtonText: 'Set as default',\n        editButtonText: 'Edit',\n        newButtonText: 'New',\n        cancelButtonText: 'Cancel',\n        saveButtonText: 'Save',\n        selectedFilterLabelText: 'Filter\\'s name: ',\n        availableContainerLabelText: 'Available fields',\n        selectedEmptyMessageText: 'Select or create a new filter configuration'\n      },\n      styleClasses: {\n        setDefaultButtonClass: empty,\n        editButtonClass: empty,\n        newButtonClass: empty,\n        cancelButtonClass: empty,\n        saveButtonClass: empty,\n        selectedEmptyMessageClass: empty\n      },\n      iconPrefix: '',\n      filterValidationFn: empty\n    };\n    \n    var textsRegex = /text/;\n    var styleClassesRegex= /styleClasses/;\n  \n    provider.$get = function () {\n      return provider;\n    };\n    provider.getDefaults = getDefaults;\n    provider.setDefaults = setDefaults;\n    \n    function getDefaults(customConfig) {\n      var config = {};\n      \n      Object.keys(defaults).forEach(function (key) {\n        if (!textsRegex.test(key) && !styleClassesRegex.test(key)) {\n          if (isNotNull(defaults[key])) {\n            config[key] = defaults[key];\n          }\n        } else {\n          if (isNull(config[key])) {\n            config[key] = {};\n          }\n          if (isNotNull(defaults[key])) {\n            Object.keys(defaults[key]).forEach(function (subKey) {\n              if (isNotNull(defaults[key][subKey])) {\n                config[key][subKey] = defaults[key][subKey];\n              }\n            });\n          }\n        }\n      });\n  \n      if (isNotNull(customConfig)) {\n        Object.keys(defaults).forEach(function (key) {\n          if (!textsRegex.test(key) && !styleClassesRegex.test(key)) {\n            if (isNotNull(customConfig[key])) {\n              config[key] = customConfig[key];\n            }\n          } else {\n            if (isNotNull(customConfig[key])) {\n              Object.keys(customConfig[key]).forEach(function (subKey) {\n                if (isNotNull(customConfig[key][subKey])) {\n                  config[key][subKey] = customConfig[key][subKey];\n                }\n              });\n            }\n          }\n        });\n      }\n      \n      return config;\n    }\n    \n    function setDefaults(config) {\n      Object.keys(config).forEach(function (key) {\n        if (!textsRegex.test(key) && !styleClassesRegex.test(key)) {\n          defaults[key] = config[key];\n        } else {\n          Object.keys(config[key]).forEach(function (subKey) {\n            defaults[key][subKey] = config[key][subKey];\n          });\n        }\n      });\n    }\n  }\n  \n  ngAdvancedDragDropFilterRun.$inject = ['$templateCache'];\n  \n  function ngAdvancedDragDropFilterRun($templateCache) {\n    $templateCache.put(\n      'nggs.advanced-drag-drop-filter.html',\n      [\n        '<div class=\"advanced-drag-drop-filter\">',\n          '<div class=\"control-container\">',\n            '<div class=\"filter-selection\">',\n              '<label class=\"filter-selection-label\" ng-bind=\"::filterSelectionLabelText\"></label>',\n              '<select class=\"filter-selection-select\" ng-disabled=\"isEditing || filters == null || filters.length == 0\" ng-model=\"selected\" ng-options=\"option.name for option in filters track by option.id\" ng-change=\"change()\"></select>',\n            '</div>',\n            '<div class=\"buttons-container\">',\n              '<button class=\"set-default-button {{ ::setDefaultButtonClass }}\" ng-if=\"showEditionButton()\" type=\"button\" ng-click=\"setDefault()\" ng-bind=\"::setDefaultButtonText\"></button>',\n              '<button class=\"edit-button {{ ::editButtonClass }}\" ng-if=\"showEditionButton()\" type=\"button\" ng-click=\"edit()\" ng-bind=\"::editButtonText\"></button>',\n              '<button class=\"new-button {{ ::newButtonClass }}\" ng-if=\"!isEditing\" type=\"button\" ng-click=\"new()\" ng-bind=\"::newButtonText\"></button>',\n              '<button class=\"cancel-button {{ ::cancelButtonClass }}\" ng-if=\"isEditing\" type=\"button\" ng-click=\"cancel()\" ng-bind=\"::cancelButtonText\"></button>',\n              '<button class=\"save-button {{ ::saveButtonClass }}\" ng-if=\"isEditing\" ng-disabled=\"!isFilterValid()\" type=\"button\" ng-click=\"save()\" ng-bind=\"::saveButtonText\"></button>',\n            '</div>',\n          '</div>',\n          '<div class=\"selected-container {{ isEditing ? \\'editing\\' : \\'\\' }}\">',\n            '<div ng-if=\"selected == null\" class=\"selected-empty-message {{ ::selectedEmptyMessageClass }}\" ng-bind=\"::selectedEmptyMessageText\"></div>',\n            '<div ng-if=\"isEditing\" class=\"selected-filter-header\">',\n              '<label class=\"selected-filter-label\" ng-bind=\"::selectedFilterLabelText\"></label>',\n              '<input class=\"selected-filter-input\" type=\"text\" ng-model=\"editingFilter.name\" />',\n            '</div>',\n            '<div class=\"selected-fields\"></div>',\n          '</div>',\n          '<div ng-show=\"isEditing\" class=\"available-container {{ isEditing ? \\'editing\\' : \\'\\' }}\">',\n            '<label ng-bind=\"::availableContainerLabelText\"></label>',\n            '<div class=\"available-fields\">',\n              '<div class=\"available-field\" ng-repeat=\"field in availableFields track by field.id\" data-id=\"{{ ::field.id }}\" draggable=\"true\">',\n                '<i class=\"available-field-icon\" ng-class=\"getFieldClass(field)\"></i> <span class=\"available-field-name\" ng-bind=\"::field.name\"></span>',\n              '</div>',\n            '</div>',\n          '</div>',\n          '<div class=\"source-fields\" ng-transclude></div>',\n        '</div>'\n      ].join('')\n    );\n  }\n  \n  \n  function ngAdvancedDragDropFilterDirective() {\n    return {\n      restrict: 'E',\n      templateUrl: 'nggs.advanced-drag-drop-filter.html',\n      transclude: true,\n      scope: {\n        filters: '=',\n        selected: '=',\n        options: '=',\n        onSave: '&',\n        onSetDefault: '&',\n        onChangeFilter: '&'\n      },\n      controller: ngAdvancedDragDropFilterController\n    };\n  }\n  \n  ngAdvancedDragDropFilterController.$inject = [\n    '$scope',\n    '$element',\n    '$timeout',\n    'ngAdvancedDragDropFilterConfig'\n  ];\n  \n  function ngAdvancedDragDropFilterController(\n    $scope,\n    $element,\n    $timeout,\n    ngAdvancedDragDropFilterConfig\n  ) {\n    var self = $scope;\n    var rootElement = $element[0];\n    \n    var availableFields = rootElement.querySelector('.available-fields');\n    var availableFieldRegex = /available-field/;\n    var config = {};\n    var dragging;\n    var fields = {};\n    var filterValidationFn = defaultValidationFn;\n    var iconPrefix = '';\n    var selectedFields = rootElement.querySelector('.selected-fields');\n    var $selected;\n    var sourceFields = rootElement.querySelector('.source-fields');\n    var styleClassesRegex = /Class$/;\n    var textRegex = /Text$/;\n    \n    self.availableContainerLabelText = null;\n    self.availableFields = null;\n    self.cancelButtonClass = null;\n    self.cancelButtonText = null;\n    self.editButtonClass = null;\n    self.editButtonText = null;\n    self.editingFilter = null;\n    self.filterSelectionLabelText = null;\n    self.isEditing = false;\n    self.newButtonClass = null;\n    self.newButtonText = null;\n    self.saveButtonClass = null;\n    self.saveButtonText = null;\n    self.selectedFilterLabelText = null;\n    self.selectedEmptyMessageText = null;\n    self.setDefaultButtonClass = null;\n    self.setDefaultButtonText = null;\n    \n    self.cancel = cancel;\n    self.change = changeFilter;\n    self.edit = editFilter;\n    self.getFieldClass = getFieldClass;\n    self.isFilterValid = isFilterValid;\n    self.new = newFilter;\n    self.save = saveFilter;\n    self.setDefault = setDefault;\n    self.showEditionButton = showEditionButton;\n    \n    init();\n    \n    function cancel() {\n      self.isEditing = false;\n      self.editingFilter = null;\n      destroyDragNDropListeners();\n      setupSelectedFilter();\n    }\n    \n    function changeFilter() {\n      setupSelectedFilter();\n      self.onChangeFilter({ $event: self.selected });\n    }\n    \n    function clearSelectedFilters() {\n      while (selectedFields.firstChild) {\n        selectedFields.removeChild(selectedFields.firstChild);\n      }\n    }\n    \n    function defaultValidationFn(filter) {\n      return (filter.name && filter.name.length > 0 && filter.fields.length > 0);\n    }\n    \n    function destroy() {\n      destroyDragNDropListeners();\n      \n      if ($selected) {\n        $selected();\n      }\n    }\n    \n    function destroyDragNDropListeners() {\n      rootElement.removeEventListener('dragstart', onDragStart, true);\n      availableFields.removeEventListener('dragover', onDragOver, true);\n      selectedFields.removeEventListener('dragover', onDragOver, true);\n      availableFields.removeEventListener('drop', onDropAvailable, true);\n      selectedFields.removeEventListener('drop', onDropSelected, true);\n    }\n    \n    function editFilter() {\n      self.isEditing = true;\n      \n      self.editingFilter = {\n        id: self.selected.id,\n        name: self.selected.name,\n        fields: self.selected.fields.slice()\n      }\n      \n      setupAvailableFields();\n      setupDragNDropListeners();\n    }\n    \n    function getFieldClass(field) {\n      var ngClass = {};\n      ngClass[iconPrefix] = true;\n      ngClass[field.icon] = true;\n      return ngClass;\n    }\n    \n    function init() {\n      setupConfig();\n      setupWatcher();\n      setupFields();\n      setupDestroy();\n    }\n    \n    function isFilterValid() {\n      return filterValidationFn(self.editingFilter);\n    }\n    \n    function newFilter() {\n      clearSelectedFilters();\n      \n      self.isEditing = true;\n      self.editingFilter = {\n        id: null,\n        name: null,\n        fields: []\n      }\n      \n      setupAvailableFields();\n      setupDragNDropListeners();\n    }\n    \n    function onDragStart(event) {\n      dragging = event.target;\n      dragging.className += ' dragging';\n    }\n    \n    function onDragOver(event) {\n      event.preventDefault();\n    }\n    \n    function onDropAvailable() {\n      dragging.className = dragging.className.replace(/dragging/, '');\n      \n      if (!availableFieldRegex.test(dragging.className)) {\n        var field = fields[dragging.dataset.id];\n        \n        var indexOf = self.editingFilter.fields.indexOf(field.id);\n        \n        self.editingFilter.fields.splice(indexOf, 1);\n        self.availableFields.push(field);\n        \n        $timeout(function() {\n          selectedFields.removeChild(field.field);\n          $scope.$apply();\n        });\n      }\n    }\n    \n    function onDropSelected() {\n      dragging.className = dragging.className.replace(/dragging/, '');\n      \n      if (availableFieldRegex.test(dragging.className)) {\n        var field = self.availableFields.find(function(field) {\n          return field.id === dragging.dataset.id;\n        });\n        \n        var indexOf = self.availableFields.indexOf(field);\n        \n        self.availableFields.splice(indexOf, 1);\n        self.editingFilter.fields.push(field.id);\n        \n        $timeout(function() {\n          $scope.$apply();\n          selectedFields.appendChild(field.field);\n        });\n      }\n    }\n    \n    function saveFilter() {\n      if (isFilterValid()) {\n        self.isEditing = false;\n        self.onSave({ $event: self.editingFilter });\n        self.editingFilter = null;\n        destroyDragNDropListeners();\n        setupSelectedFilter();\n      }\n    }\n    \n    function setDefault() {\n      self.onSetDefault({ $event: self.selected });\n    }\n    \n    function setupAvailableFields() {\n      self.availableFields = [];\n      \n      Object.keys(fields).forEach(function(key) {\n        var indexOf = self.editingFilter.fields.indexOf(key);\n        \n        var fieldRef = fields[key];\n        \n        fieldRef.field.setAttribute('draggable', 'true');\n        \n        if (indexOf === -1) {\n          self.availableFields.push(fieldRef);\n        }\n      });\n    }\n    \n    function setupConfig() {\n      config = ngAdvancedDragDropFilterConfig.getDefaults($scope.options);\n      \n      iconPrefix = config.iconPrefix;\n      if (isNotNull(config.filterValidationFn) && isFunction(config.filterValidationFn)) {\n        filterValidationFn = config.filterValidationFn;\n      }\n      \n      setupStyleClasses();\n      setupTexts();\n    }\n    \n    function setupDragNDropListeners() {\n      rootElement.addEventListener('dragstart', onDragStart, true);\n      availableFields.addEventListener('dragover', onDragOver, true);\n      selectedFields.addEventListener('dragover', onDragOver, true);\n      availableFields.addEventListener('drop', onDropAvailable, true);\n      selectedFields.addEventListener('drop', onDropSelected, true);\n    }\n    \n    function setupDestroy() {\n      $element.on('$destroy', function () {\n        destroy();\n        $scope.$destroy();\n      });\n      \n      $scope.$on('$destroy', function () {\n        destroy();\n      });\n    }\n    \n    function setupFields() {\n      $timeout(function() {\n        var fieldsNodeList = rootElement.querySelectorAll('[draggable=true]');\n        \n        while (sourceFields.firstChild) {\n          sourceFields.removeChild(sourceFields.firstChild);\n        }\n        \n        fieldsNodeList.forEach(function(field) {\n          var dataset = field.dataset;\n          \n          if (isNull(dataset.id) || isNull(dataset.name)) {\n            throw new  Error('All draggable fields must have the attributes: data-id and data-name');\n          }\n          \n          fields[dataset.id] = {\n            id: dataset.id,\n            name: dataset.name,\n            icon: dataset.icon,\n            field: field\n          }\n        });\n        \n        setupSelectedFilter();\n      });\n    }\n    \n    function setupSelectedFilter() {\n      clearSelectedFilters();\n      if (self.selected && Array.isArray(self.selected.fields)) {\n        self.selected.fields.forEach(function(field) {\n          var fieldRef = fields[field];\n          if (isNotNull(fieldRef)) {\n            fieldRef.field.setAttribute('draggable', 'false');\n            selectedFields.appendChild(fields[field].field);\n          }\n        });\n      }\n    }\n    \n    function setupStyleClasses() {\n      Object.keys(config.styleClasses).forEach(function(key) {\n        if (styleClassesRegex.test(key) && config.styleClasses[key].length) {\n          self[key] = config.styleClasses[key];\n        }\n      });\n    }\n    \n    function setupTexts() {\n      Object.keys(config.texts).forEach(function(key) {\n        if (textRegex.test(key) && config.texts[key].length) {\n          self[key] = config.texts[key];\n        }\n      });\n    }\n    \n    function setupWatcher() {\n      $selected = $scope.$watch('selected', function() {\n        if (!self.isEditing) {\n          setupSelectedFilter();\n        }\n      });\n    }\n    \n    function showEditionButton() {\n      return !self.isEditing && self.selected;\n    }\n  }\n  \n  function isFunction(param) {\n    return typeof param === 'function';\n  }\n  \n  function isNotNull(param) {\n    return !isNull(param);\n  }\n  \n  function isNull(param) {\n    return param == null;\n  }\n  \n})();\n"]}